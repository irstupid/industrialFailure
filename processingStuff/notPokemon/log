Ok so I think I should start documenting stuff so I'm making this little log book so I remember what I do.

Log 1:
It usually starts at day 0 but I dident have a log that day and its all going to get replaced by my new idea. So basically I want to have a Map class that can take in a class, like tote really cool objectified ones where your like Map<T> { } and then Map<PImage> wowSoCool = new Map<PImage>(); this would solve al my previous issues with the map system because I can just have multiple layers its perfect. I also want a library so it just has to load once and that sounds super efficient, and collision detection is gonna be crazy fast because we can just get literally 4 things from an array. I still don't know exactly how collisions are gonna work but we will cross that bridge when we get there. Bye :)

Log 2:
I mostly worked on frc today but i learned how hashmaps work and they are literally just inbuilt tile maps so thats really cool and useful. now i have to learn how jsons work thats gonna be fun. Bye

Log 3:
oh my god i did so much stuff. ok so first of all I'm coding at my dads house for like, the first time, and thats super fun. the keyboard is wonderful and clicky and nice (thanks papa ^u^). i got the whole map thing working and its SO COOL! it loads from a json, but not the library, which i initially though was sad and a flaw, but realized its actually a secret blessing because with the power of hashmaps you can use 1 tilemap and just have different libraries that state "this is this image" and "this is a wall" and its so cool. then i made a cool little looping thing to draw all the tiles and it keeps track of the tallest tile and uses transformation shenanigans to automatically align any grid of arbitrarily sized tiles. its fucking awesome. i also ave plans on how the gameplay will do be. so squish mellows, like the ones me and della got for our birthdays (btw happy birthday della), fight. it wold be like Pokémon but only 4 types: fire, water, earth, air. fire beats air, air beats earth, earth beats water, water beats fire. they would only have 3 moves buttttttt they could move during battle tabletop style. like tabletop Pokémon, but video game. also Caleb and i are actually making a table top version w/ the squish mellows we have and we have some of the numbers down and things. but thats a long way off from being implemented. right now the next thing would be camera movement, but i don't really want to make a whole map out of a json so i might make a map editing tool that be cool im not a fool; pool; bool.

Log 5:
I missed log 4 because I had to go to lunch but it went anything super interesting I just worked on the editor a little and bamboozled kvr with my tile map. Now the editors finished and its actually kinda user friendly and cool. It was also a fun, nice, easy project to program except for the part with strings because strings suck. Well actually I love strings but deleting the last character sucks. I just copied a thing I found on stack  overflow :). Now I need to make a little mapped get camera stuff working.

Log 6:
Ok so I made the editor way more intuitive by coloring different tags different colors, with helps a ton. I also fixed a little issue with how things were drawn so now it thinks x is x instead of using x as y. I also moved all the camera stuff to a new class and clamped the distance so you can look around, with was actually a super easy translate but is kinda inefficient because we are still drawing everything off screen. A much better way would be to only loop through visible tiles, but I don't really want to do that because that's a lot of complicated math, especially for arbitrarily sized tiles, and I'm pretty sure processing is smart and won't draw something offscreen so its not even that much of a optimization. Other than that just a day of doing stuff without any major revelations. Bye bye.

Log 7:
I had to program the player today. its started out really good. i made a good camera system that looks nice and things. its a little unelegant but proboly fine. then i had to program collision and that hurt me. i havent even got to the logic yet, just getting the tiles is a headach. apparently there is a differnce between a Boolean and a boolean, one is a primitave one is a wrapper class. i dont really understand the error it threw at me, so i had to settle for the inelegant solution of just writing half of the collision in the main class. this sucks. bye bye now.  

Log 8:
ok so im making procress on the collision. 2 walls works, 1 wall half works, and 3 walls should just be inverted 1 wall. im breaking it down and its slowly becoming more manageable, but its also super messya nd im sure there is a nice mathamatical way to express it but im just to dumb to figure it out. ill do that later, right now i just want to get collision working. bye again.